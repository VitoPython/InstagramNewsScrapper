version: '3.8'

services:
  # PostgreSQL database
  db:
    image: postgres:14
    container_name: instagram_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=instagram_posts
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery broker
  redis:
    image: redis:6-alpine
    container_name: instagram_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # FastAPI application
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: instagram_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/instagram_posts
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_BACKEND_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./:/app
      - ./templates:/app/templates

  # Celery worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: instagram_worker
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/instagram_posts
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_BACKEND_URL=redis://redis:6379/0
    depends_on:
      - redis
      - db
      - api
    restart: unless-stopped
    volumes:
      - ./:/app

  # Celery beat scheduler
  beat:
    build:
      context: .
      dockerfile: Dockerfile.beat
    container_name: instagram_beat
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/instagram_posts
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_BACKEND_URL=redis://redis:6379/0
    depends_on:
      - redis
      - worker
    restart: unless-stopped
    volumes:
      - ./:/app

volumes:
  postgres_data: 